#!/usr/bin/env node

/**
 * Script para generar un post de blog de IA semanal
 * Uso: node generate-post.js [weekNumber]
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import fetch from 'node-fetch';
import { JSDOM } from 'jsdom';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__fil  // AN√ÅLISIS PRIN  // AN√ÅLISIS PRINCIPAL
  if (topNews.length > 0) {
    const mainStory = topNews[0];
    markdown += `## üéØ Historia Principal: ${mainStory.title}\n\n`;
    markdown += await generateCriticalAnalysis(mainStory);
    markdown += `\n\n**[Leer m√°s ‚Üí](${mainStory.url})**\n\n`;
    markdown += `---\n\n`;
  }

  // OTRAS NOTICIAS DESTACADAS
  if (topNews.length > 1) {
    markdown += `## üì∞ Otras Noticias que Importan\n\n`;
    for (let idx = 0; idx < topNews.slice(1).length; idx++) {
      const item = topNews[idx + 1];
      markdown += `### ${item.title}\n\n`;
      markdown += await generateCriticalAnalysis(item);
      markdown += `\n\n**[Fuente: ${item.source}](${item.url})** ‚Ä¢ *${item.score} puntos, ${item.comments} comentarios*\n\n`;
      if (idx < topNews.length - 3) markdown += `---\n\n`;
    }
    markdown += `\n`;
  }length > 0) {
    const mainStory = topNews[0];
    markdown += `## üéØ Historia Principal: ${mainStory.title}\n\n`;
    markdown += await generateCriticalAnalysis(mainStory);
    markdown += `\n\n**[Leer m√°s ‚Üí](${mainStory.url})**\n\n`;
    markdown += `---\n\n`;
  }

  // OTRAS NOTICIAS DESTACADAS
  if (topNews.length > 1) {
    markdown += `## üì∞ Otras Noticias que Importan\n\n`;
    for (let idx = 0; idx < topNews.slice(1).length; idx++) {
      const item = topNews[idx + 1];
      markdown += `### ${item.title}\n\n`;
      markdown += await generateCriticalAnalysis(item);
      markdown += `\n\n**[Fuente: ${item.source}](${item.url})** ‚Ä¢ *${item.score} puntos, ${item.comments} comentarios*\n\n`;
      if (idx < topNews.length - 3) markdown += `---\n\n`;
    }
    markdown += `\n`;
  }aci√≥n
const CONFIG = {
  sources: {
    hackerNews: 'https://hacker-news.firebaseio.com/v0',
    reddit: 'https://www.reddit.com/r/artificial+MachineLearning+LocalLLaMA.json',
    arxiv: 'https://export.arxiv.org/api/query',
  },
  keywords: [
    // Empresas usando IA (PRIORIDAD ALTA)
    'company adopts ai',
    'business ai',
    'enterprise ai',
    'ai transformation',
    'ai implementation',
    'customer service ai',
    'ai automation',
    'ai productivity',
    'ai workflow',
    // Grandes empresas tech
    'openai',
    'anthropic',
    'google ai',
    'microsoft ai',
    'meta ai',
    // Tecnolog√≠as aplicables
    'chatbot',
    'automation',
    'ai assistant',
    'copilot',
    'gpt',
    'llm application',
    'ai tool',
  ],
  limits: {
    hackerNews: 30,
    reddit: 25,
    arxiv: 10,
  },
};

// ============================================
// FUNCIONES DE AGREGACI√ìN
// ============================================

async function fetchHackerNews() {
  console.log('üì∞ Obteniendo noticias de Hacker News...');
  
  const topStoriesUrl = `${CONFIG.sources.hackerNews}/topstories.json`;
  const response = await fetch(topStoriesUrl);
  const storyIds = await response.json();

  const stories = [];
  for (const id of storyIds.slice(0, 500)) {
    const storyUrl = `${CONFIG.sources.hackerNews}/item/${id}.json`;
    const storyResponse = await fetch(storyUrl);
    const story = await storyResponse.json();

    if (!story || story.type !== 'story') continue;

    const text = `${story.title} ${story.url || ''}`.toLowerCase();
    const hasKeyword = CONFIG.keywords.some((keyword) =>
      text.includes(keyword.toLowerCase())
    );

    if (hasKeyword) {
      stories.push({
        title: story.title,
        url: story.url || `https://news.ycombinator.com/item?id=${story.id}`,
        score: story.score || 0,
        comments: story.descendants || 0,
        source: 'Hacker News',
        date: new Date(story.time * 1000).toISOString(),
      });

      if (stories.length >= CONFIG.limits.hackerNews) break;
    }
  }

  console.log(`   ‚úÖ ${stories.length} historias encontradas`);
  return stories;
}

async function fetchReddit() {
  console.log('ü§ñ Obteniendo posts de Reddit...');
  
  const response = await fetch(CONFIG.sources.reddit, {
    headers: { 'User-Agent': 'KAINET-News-Bot/1.0' },
  });
  const data = await response.json();

  const posts = data.data.children
    .map((child) => ({
      title: child.data.title,
      url: `https://reddit.com${child.data.permalink}`,
      score: child.data.score,
      comments: child.data.num_comments,
      source: `Reddit (r/${child.data.subreddit})`,
      date: new Date(child.data.created_utc * 1000).toISOString(),
    }))
    .slice(0, CONFIG.limits.reddit);

  console.log(`   ‚úÖ ${posts.length} posts encontrados`);
  return posts;
}

async function fetchArxiv() {
  console.log('üìö Obteniendo papers de ArXiv...');
  
  const query = 'cat:cs.AI OR cat:cs.LG OR cat:cs.CL';
  const url = `${CONFIG.sources.arxiv}?search_query=${encodeURIComponent(
    query
  )}&start=0&max_results=${CONFIG.limits.arxiv}&sortBy=submittedDate&sortOrder=descending`;

  const response = await fetch(url);
  const xmlText = await response.text();

  const entries = xmlText.match(/<entry>([\s\S]*?)<\/entry>/g) || [];
  const papers = entries.map((entry) => {
    const title = entry.match(/<title>(.*?)<\/title>/)?.[1]?.trim() || '';
    const id = entry.match(/<id>(.*?)<\/id>/)?.[1] || '';
    const published = entry.match(/<published>(.*?)<\/published>/)?.[1] || '';

    return {
      title: title.replace(/\n/g, ' '),
      url: id,
      score: 0,
      comments: 0,
      source: 'ArXiv',
      date: published,
    };
  });

  console.log(`   ‚úÖ ${papers.length} papers encontrados`);
  return papers;
}

async function aggregateNews() {
  console.log('\nüîÑ Agregando noticias de todas las fuentes...\n');
  
  const [hnNews, redditPosts, arxivPapers] = await Promise.all([
    fetchHackerNews(),
    fetchReddit(),
    fetchArxiv(),
  ]);

  const allNews = [...hnNews, ...redditPosts, ...arxivPapers].sort(
    (a, b) => b.score - a.score
  );

  console.log(`\n‚úÖ Total: ${allNews.length} noticias agregadas\n`);
  return allNews;
}

// ============================================
// WEB SCRAPING - Extraer contenido real
// ============================================

/**
 * Extrae el contenido principal de un art√≠culo
 */
async function fetchArticleContent(url) {
  try {
    console.log(`   üìÑ Leyendo: ${url.substring(0, 60)}...`);
    
    const response = await fetch(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36'
      },
      timeout: 5000
    });
    
    if (!response.ok) return null;
    
    const html = await response.text();
    const dom = new JSDOM(html);
    const document = dom.window.document;
    
    // Intentar extraer contenido de diferentes estructuras
    let content = '';
    
    // 1. Article tag
    const article = document.querySelector('article');
    if (article) {
      content = article.textContent;
    }
    
    // 2. Main content div (com√∫n en blogs)
    if (!content) {
      const main = document.querySelector('main, .post-content, .article-content, .entry-content');
      if (main) content = main.textContent;
    }
    
    // 3. Paragraphs en el body
    if (!content) {
      const paragraphs = Array.from(document.querySelectorAll('p'));
      content = paragraphs.map(p => p.textContent).join(' ');
    }
    
    // Limpiar y limitar
    content = content
      .replace(/\s+/g, ' ')
      .replace(/\n+/g, ' ')
      .trim()
      .substring(0, 3000); // Primeros 3000 caracteres
    
    return content || null;
    
  } catch (error) {
    console.log(`   ‚ö†Ô∏è  No se pudo leer el art√≠culo: ${error.message}`);
    return null;
  }
}

/**
 * Genera resumen inteligente basado en el contenido real
 */
function generateSummaryFromContent(title, content, score, comments) {
  if (!content || content.length < 100) {
    // Fallback si no pudimos extraer contenido
    return generateFallbackSummary(title, score, comments);
  }
  
  const titleLower = title.toLowerCase();
  const contentLower = content.toLowerCase();
  
  // Detectar tipo de noticia y generar resumen apropiado
  
  // 1. Lanzamiento de producto
  if (contentLower.includes('launch') || contentLower.includes('release') || 
      contentLower.includes('announcing') || contentLower.includes('available')) {
    const features = extractKeyPhrases(content, ['feature', 'capability', 'improvement', 'new']);
    return `**Nuevo lanzamiento importante.** ${features}\n\n` +
           `**${score.toLocaleString()} personas** ya est√°n discutiendo las implicaciones. ` +
           `Si tu empresa est√° evaluando estas herramientas, este es el momento de probar.\n\n` +
           `**üíº Para tu negocio:** Las nuevas capacidades podr√≠an resolver problemas que antes requer√≠an equipos enteros o eran directamente imposibles.`;
  }
  
  // 2. Caso de √©xito / Implementaci√≥n
  if (contentLower.includes('customer') || contentLower.includes('implementation') ||
      contentLower.includes('deployed') || contentLower.includes('adopted')) {
    const results = extractKeyPhrases(content, ['result', 'improve', 'increase', 'reduce', 'save']);
    return `**Caso de implementaci√≥n real.** ${results}\n\n` +
           `Los **${comments} comentarios** est√°n llenos de personas compartiendo experiencias similares‚Äî` +
           `tanto √©xitos como advertencias sobre qu√© evitar.\n\n` +
           `**üíº Aplicaci√≥n directa:** Este es el tipo de caso que puedes presentar a tu CFO para justificar inversi√≥n en IA.`;
  }
  
  // 3. An√°lisis / Opini√≥n
  if (contentLower.includes('analysis') || contentLower.includes('opinion') ||
      contentLower.includes('trend') || contentLower.includes('future')) {
    const insights = extractKeyPhrases(content, ['key', 'important', 'critical', 'essential', 'must']);
    return `**An√°lisis profundo del mercado.** ${insights}\n\n` +
           `Con **${score.toLocaleString()} votos**, esta perspectiva est√° resonando. ` +
           `El timing importa‚Äîentender estas tendencias hoy te da ventaja ma√±ana.\n\n` +
           `**üíº Contexto estrat√©gico:** Para planificar inversiones en tech, necesitas ver hacia d√≥nde va el mercado, no solo d√≥nde est√° hoy.`;
  }
  
  // 4. Tutorial / How-to
  if (contentLower.includes('how to') || contentLower.includes('guide') ||
      contentLower.includes('tutorial') || contentLower.includes('step')) {
    const steps = extractKeyPhrases(content, ['step', 'first', 'then', 'configure', 'setup']);
    return `**Gu√≠a pr√°ctica de implementaci√≥n.** ${steps}\n\n` +
           `**${comments} comentarios** agregan tips, alternativas, y soluciones a problemas comunes. ` +
           `La documentaci√≥n oficial nunca cuenta toda la historia‚Äîlos comentarios s√≠.\n\n` +
           `**üíº Para tu equipo:** Comparte esto con tu team t√©cnico. Es el tipo de recurso que ahorra semanas de prueba y error.`;
  }
  
  // Default - resumen gen√©rico pero con contenido
  const summary = extractFirstSentences(content, 2);
  return `**En pocas palabras:** ${summary}\n\n` +
         `**${score.toLocaleString()} personas** encontraron esto valioso. Los **${comments} comentarios** ` +
         `ofrecen perspectivas adicionales y debate constructivo.\n\n` +
         `**üíº Por qu√© revisar:** ${generateBusinessValue(titleLower)}`;
}

/**
 * Extrae frases clave que contengan keywords espec√≠ficas
 */
function extractKeyPhrases(content, keywords) {
  const sentences = content.match(/[^.!?]+[.!?]+/g) || [];
  
  const relevantSentences = sentences
    .filter(s => keywords.some(kw => s.toLowerCase().includes(kw)))
    .slice(0, 2)
    .map(s => s.trim())
    .join(' ');
  
  return relevantSentences.substring(0, 200) + (relevantSentences.length > 200 ? '...' : '');
}

/**
 * Extrae las primeras N oraciones
 */
function extractFirstSentences(content, n = 2) {
  const sentences = content.match(/[^.!?]+[.!?]+/g) || [];
  return sentences.slice(0, n).join(' ').trim().substring(0, 250) + '...';
}

/**
 * Genera valor de negocio basado en el t√≠tulo
 */
function generateBusinessValue(titleLower) {
  if (titleLower.includes('automation')) {
    return 'Automatizaci√≥n significa hacer m√°s con el mismo equipo, o el mismo con menos recursos.';
  }
  if (titleLower.includes('ai') || titleLower.includes('ml')) {
    return 'Las capacidades de IA est√°n madurando. Lo que era imposible hace un a√±o, ahora es commodity.';
  }
  if (titleLower.includes('customer') || titleLower.includes('service')) {
    return 'Mejor experiencia de cliente = mayor retenci√≥n. La IA est√° redefiniendo lo que los clientes esperan.';
  }
  return 'Entender estas tendencias temprano te da ventaja competitiva.';
}

/**
 * Fallback cuando no hay contenido
 */
function generateFallbackSummary(title, score, comments) {
  return `**${score.toLocaleString()} personas** est√°n siguiendo esta noticia de cerca.\n\n` +
         `Los **${comments} comentarios** ofrecen perspectivas valiosas y debate constructivo que va ` +
         `m√°s all√° del art√≠culo original.\n\n` +
         `**üíº Por qu√© importa:** Las noticias que generan este nivel de engagement suelen tocar temas ` +
         `fundamentales sobre c√≥mo la IA est√° transformando negocios reales.`;
}

// ============================================
// GENERACI√ìN DE CONTENIDO
// ============================================

async function generateMarkdownContent(news, weekNumber) {
  const now = new Date();
  const year = now.getFullYear();

  // Seleccionar las 3 noticias m√°s importantes por score
  const topNews = news.filter((n) => n.source.includes('Hacker News')).slice(0, 3);
  const topPapers = news.filter((n) => n.source === 'ArXiv').slice(0, 3);
  const topDiscussions = news.filter((n) => n.source.includes('Reddit')).slice(0, 3);

  let markdown = `# La Semana en Inteligencia Artificial\n\n`;
  markdown += `*Semana ${weekNumber}, ${year}*\n\n`;
  markdown += `Esta semana el ecosistema de IA nos trae avances que merecen una mirada cr√≠tica. `;
  markdown += `Desde movimientos corporativos que reshapean el mercado hasta investigaci√≥n que podr√≠a cambiar c√≥mo construimos sistemas inteligentes.\n\n`;
  markdown += `---\n\n`;

  // AN√ÅLISIS PRINCIPAL
  if (topNews.length > 0) {
    const mainStory = topNews[0];
    markdown += `## ÔøΩ Historia Principal: ${mainStory.title}\n\n`;
    markdown += generateCriticalAnalysis(mainStory);
    markdown += `\n\n**[Leer m√°s ‚Üí](${mainStory.url})**\n\n`;
    markdown += `---\n\n`;
  }

  // OTRAS NOTICIAS DESTACADAS
  if (topNews.length > 1) {
    markdown += `## üì∞ Otras Noticias que Importan\n\n`;
    topNews.slice(1).forEach((item, idx) => {
      markdown += `### ${item.title}\n\n`;
      markdown += generateNewsInsight(item);
      markdown += `\n\n**[Fuente: ${item.source}](${item.url})** ‚Ä¢ *${item.score} puntos, ${item.comments} comentarios*\n\n`;
      if (idx < topNews.length - 2) markdown += `---\n\n`;
    });
    markdown += `\n`;
  }

  // INVESTIGACI√ìN ACAD√âMICA
  if (topPapers.length > 0) {
    markdown += `## ÔøΩ Desde la Academia\n\n`;
    markdown += `La investigaci√≥n acad√©mica sigue empujando fronteras. Estos papers destacan esta semana:\n\n`;
    topPapers.forEach((paper) => {
      markdown += `### [${paper.title}](${paper.url})\n\n`;
      markdown += generatePaperInsight(paper);
      markdown += `\n\n`;
    });
  }

  // PULSO DE LA COMUNIDAD
  if (topDiscussions.length > 0) {
    markdown += `## ÔøΩÔ∏è Pulso de la Comunidad\n\n`;
    markdown += `Las discusiones m√°s intensas en foros especializados revelan las preocupaciones y entusiasmo del momento:\n\n`;
    topDiscussions.forEach((disc) => {
      markdown += `**[${disc.title}](${disc.url})**\n\n`;
      markdown += `*${disc.source}* ‚Äî ${disc.score} votos, ${disc.comments} comentarios\n\n`;
      markdown += generateCommunityInsight(disc);
      markdown += `\n\n`;
    });
  }

  // PERSPECTIVA KAINET
  markdown += `---\n\n`;
  markdown += `## üéØ Perspectiva KAINET\n\n`;
  markdown += generateKainetPerspective(topNews, topPapers, weekNumber);
  markdown += `\n\n`;
  
  markdown += `---\n\n`;
  markdown += `*Columna semanal curada por KAINET AI Bot ‚Ä¢ An√°lisis automatizado de ${news.length} fuentes*\n`;

  return markdown;
}

// ============================================
// GENERADORES DE AN√ÅLISIS CR√çTICO
// ============================================

async function generateCriticalAnalysis(story) {
  const { title, url, score, comments } = story;
  
  // Intentar leer el contenido real del art√≠culo
  const content = await fetchArticleContent(url);
  
  // Generar resumen basado en contenido real
  return generateSummaryFromContent(title, content, score, comments);
}

function generateNewsInsight(item) {
  const title = item.title.toLowerCase();
  
  // Insights enfocados en valor empresarial
  const insights = {
    adoption: `**Caso de √©xito real.** Cuando ves empresas tradicionales adoptando IA, no es experimento‚Äîes ROI comprobado. ` +
              `Estos son los casos que puedes usar para justificar inversi√≥n en tu propia organizaci√≥n.`,
    
    automation: `**Automatizaci√≥n que funciona.** No es futuro lejano, es presente aplicado. ` +
                `${item.score} personas validan que esto resuelve problemas reales, no solo genera titulares.`,
    
    productivity: `**Impacto medible en productividad.** Los ${item.comments} comentarios comparten n√∫meros reales: ` +
                  `tiempo ahorrado, costos reducidos, errores eliminados. M√©tricas que importan a CFOs.`,
    
    customer: `**Mejor experiencia de cliente.** La IA est√° redefiniendo expectativas. ` +
              `Respuestas instant√°neas, personalizaci√≥n real, disponibilidad 24/7. Tus competidores ya est√°n considerando esto.`,
    
    integration: `**Integraci√≥n pr√°ctica.** No necesitas reescribir todo tu stack. ` +
                 `Esta noticia muestra c√≥mo empresas est√°n integrando IA en procesos existentes sin disrupciones masivas.`,
    
    default: `**${item.score} votos, ${item.comments} comentarios.** La comunidad valida que esto importa. ` +
             `Aplicaci√≥n pr√°ctica de IA que genera resultados, no solo hype tecnol√≥gico.`
  };
  
  // Detectar categor√≠a
  if (title.includes('adopt') || title.includes('implement') || title.includes('deploy')) return insights.adoption;
  if (title.includes('automat') || title.includes('workflow')) return insights.automation;
  if (title.includes('productiv') || title.includes('efficien')) return insights.productivity;
  if (title.includes('customer') || title.includes('client') || title.includes('support')) return insights.customer;
  if (title.includes('integrat') || title.includes('tool')) return insights.integration;
  
  return insights.default;
}

function generatePaperInsight(paper) {
  const insights = [
    `Investigaci√≥n que podr√≠a influir en la pr√≥xima generaci√≥n de herramientas pr√°cticas. Los papers de ArXiv de hoy son los productos de ma√±ana.`,
    `Un enfoque que desaf√≠a asunciones comunes en el campo. La academia sigue siendo donde se cocinan las disrupciones reales.`,
    `T√©cnica que podr√≠a hacer m√°s eficientes sistemas actuales. Optimizaci√≥n y eficiencia son los pr√≥ximos campos de batalla en IA.`,
    `Propuesta que explora territorio inexplorado. La investigaci√≥n fundamental sigue siendo cr√≠tica, incluso en un campo tan aplicado como IA.`,
  ];
  
  return insights[Math.floor(Math.random() * insights.length)];
}

function generateCommunityInsight(discussion) {
  const title = discussion.title.toLowerCase();
  
  if (discussion.comments > 100) {
    return `El volumen de comentarios (${discussion.comments}) indica una conversaci√≥n profunda. ` +
           `Estos debates community-driven a menudo revelan problemas pr√°cticos que los art√≠culos acad√©micos no capturan.`;
  }
  
  if (discussion.score > 300) {
    return `El alto engagement (${discussion.score} votos) muestra que este tema est√° resonando. ` +
           `Lo que la comunidad de practitioners elige discutir es tan importante como lo que publican los labs de investigaci√≥n.`;
  }
  
  return `Una conversaci√≥n que vale seguir. Los forums especializados son donde se procesa el ruido y emerge se√±al real.`;
}

function generateKainetPerspective(topNews, topPapers, weekNumber) {
  return `**Semana ${weekNumber}:** La IA ya no es "tecnolog√≠a del futuro"‚Äîes ventaja competitiva del presente.

Lo que vimos esta semana confirma una tendencia: **empresas de todos los tama√±os est√°n implementando IA, y est√°n viendo resultados medibles**.

### üí° Tres Takeaways Accionables:

**1. Empieza peque√±o, pero empieza ya**  
No necesitas reescribir todo tu negocio. Identifica UN proceso manual que consuma tiempo y explora c√≥mo automatizarlo con IA.

**2. Los casos de uso est√°n probados**  
Atenci√≥n al cliente, an√°lisis de datos, automatizaci√≥n de procesos‚Äîya no son experimentos. Son aplicaciones con ROI comprobado que puedes replicar.

**3. La brecha de adopci√≥n es tu oportunidad**  
Tus competidores est√°n en una de dos situaciones: ya empezaron (y est√°n ganando eficiencia) o est√°n esperando (y perdiendo terreno). ¬øD√≥nde quieres estar en 6 meses?

---

**En KAINET no vendemos hype.** Construimos prototipos funcionales que demuestran valor real antes de cualquier inversi√≥n grande.  

¬øLa pregunta no es "si" adoptar IA‚Äîes "c√≥mo" hacerlo de forma rentable y estrat√©gica.`;
}

function generateBlogPost(news, weekNumber) {
  const now = new Date();
  const year = now.getFullYear();

  // Generar t√≠tulo editorial basado en la noticia principal
  const topStory = news.find((n) => n.source.includes('Hacker News'));
  const mainTheme = topStory ? extractMainTheme(topStory.title) : 'Innovaci√≥n';
  
  const editorialTitles = [
    `IA Esta Semana: ${mainTheme} y el Futuro que Estamos Construyendo`,
    `Columna Semanal de IA: ${mainTheme} en Foco (Semana ${weekNumber})`,
    `Lo Que Importa en IA: ${mainTheme} y M√°s All√°`,
    `Semana ${weekNumber} en IA: An√°lisis Cr√≠tico de ${mainTheme}`,
  ];

  const post = {
    id: Date.now(),
    slug: `ia-semanal-semana-${weekNumber}-${year}`,
    title: editorialTitles[weekNumber % editorialTitles.length],
    excerpt: `An√°lisis semanal de las noticias m√°s relevantes en inteligencia artificial. ` +
             `Esta semana: ${mainTheme}, investigaci√≥n emergente, y perspectivas desde quienes construyen con IA en el mundo real. ` +
             `M√°s all√° de los titulares, lo que realmente importa.`,
    author: 'KAINET AI Bot',
    date: now.toISOString().split('T')[0],
    readTime: '8 min',
    category: 'IA',
    image: `https://placehold.co/800x500/0a0a0a/00E5FF?text=IA+Semana+${weekNumber}+${year}`,
    featured: false,
    content: generateMarkdownContent(news, weekNumber),
  };

  return post;
}

// Helper para extraer tema principal
function extractMainTheme(title) {
  const themes = {
    'openai': 'OpenAI',
    'anthropic': 'Anthropic',
    'google': 'Google AI',
    'meta': 'Meta AI',
    'llm': 'LLMs',
    'gpt': 'GPT',
    'model': 'Modelos de IA',
    'chatbot': 'Chatbots',
    'autonomous': 'Agentes Aut√≥nomos',
    'vision': 'Computer Vision',
    'robotics': 'Rob√≥tica',
    'regulation': 'Regulaci√≥n de IA',
    'open source': 'Open Source',
    'security': 'Seguridad',
    'privacy': 'Privacidad',
  };

  const lowerTitle = title.toLowerCase();
  for (const [keyword, theme] of Object.entries(themes)) {
    if (lowerTitle.includes(keyword)) {
      return theme;
    }
  }

  return 'Innovaci√≥n en IA';
}

// ============================================
// GUARDADO EN blogPosts.js
// ============================================

function saveToBlogPosts(newPost) {
  const blogPostsPath = path.resolve(__dirname, '../../src/data/blogPosts.js');
  
  console.log('üíæ Guardando post en blogPosts.js...');
  
  // Leer el archivo actual
  let content = fs.readFileSync(blogPostsPath, 'utf-8');
  
  // Encontrar el array de posts
  const postsMatch = content.match(/export const blogPosts = (\[[\s\S]*?\]);/);
  if (!postsMatch) {
    throw new Error('No se pudo encontrar el array blogPosts');
  }
  
  // Parsear los posts existentes
  const postsArrayString = postsMatch[1];
  // Crear un string seguro para eval (solo para desarrollo)
  const existingPosts = eval(postsArrayString);
  
  // Verificar si ya existe un post con el mismo slug
  const existingIndex = existingPosts.findIndex(p => p.slug === newPost.slug);
  
  if (existingIndex !== -1) {
    console.log('   ‚ö†Ô∏è  Ya existe un post con este slug. Actualizando...');
    existingPosts[existingIndex] = newPost;
  } else {
    console.log('   ‚úÖ Agregando nuevo post...');
    existingPosts.unshift(newPost); // Agregar al inicio
  }
  
  // Generar el nuevo contenido del archivo
  const newPostsString = JSON.stringify(existingPosts, null, 2);
  
  // Reconstruir el archivo completo
  content = content.replace(
    /export const blogPosts = \[[\s\S]*?\];/,
    `export const blogPosts = ${newPostsString};`
  );
  
  // Guardar
  fs.writeFileSync(blogPostsPath, content, 'utf-8');
  
  console.log(`   ‚úÖ Post guardado exitosamente\n`);
  console.log(`   üìù Slug: ${newPost.slug}`);
  console.log(`   üîó URL: http://localhost:5173/blog/${newPost.slug}\n`);
}

// ============================================
// MAIN
// ============================================

async function main() {
  try {
    const args = process.argv.slice(2);
    const weekNumber = args[0] || Math.ceil(
      (new Date() - new Date(new Date().getFullYear(), 0, 1)) / 604800000
    );

    console.log(`\nü§ñ Generando post de IA Semanal (Semana ${weekNumber})\n`);
    console.log('‚îÅ'.repeat(60));

    // Agregar noticias
    const news = await aggregateNews();

    // Generar post
    console.log('üìù Generando contenido del post...');
    const post = generateBlogPost(news, weekNumber);
    console.log('   ‚úÖ Post generado\n');

    // Guardar en blogPosts.js
    saveToBlogPosts(post);

    console.log('‚îÅ'.repeat(60));
    console.log('‚úÖ ¬°Proceso completado!\n');
    console.log('Pr√≥ximos pasos:');
    console.log('  1. Ejecuta: npm run dev (en la ra√≠z del proyecto)');
    console.log('  2. Abre: http://localhost:5173/blog');
    console.log('  3. Ver√°s el nuevo post autom√°tico\n');

  } catch (error) {
    console.error('‚ùå Error:', error.message);
    process.exit(1);
  }
}

main();
